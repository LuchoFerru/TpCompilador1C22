Terminals unused in grammar

   BETWEEN
   INLIST
   DOS_PUNTOS


Gramática

    0 $accept: programa $end

    1 programa: PROGRAM zona_declaracion algoritmo END

    2 zona_declaracion: declaraciones

    3 declaraciones: declaracion
    4              | declaraciones declaracion

    5 $@1: /* vacío */

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    7 lista_var: ID
    8          | lista_var COMA ID

    9 lista_tipo: lista_tipo COMA TIPO_INT
   10           | lista_tipo COMA TIPO_FLOAT
   11           | lista_tipo COMA TIPO_STRING
   12           | TIPO_INT
   13           | TIPO_FLOAT
   14           | TIPO_STRING

   15 algoritmo: bloque

   16 bloque: sentencia
   17       | bloque sentencia

   18 sentencia: asignacion
   19          | seleccion
   20          | ciclo
   21          | entrada
   22          | salida
   23          | contar

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

   25 asignacion: ID OPAR_ASIG expresion

   26 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF
   27          | IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

   28 condicion: comparacion
   29          | comparacion OP_LOG_AND comparacion
   30          | comparacion OP_LOG_OR comparacion
   31          | comparacion OP_LOG_NOT comparacion

   32 comparacion: expresion COMP_IGUAL expresion
   33            | expresion COMP_MAYOR expresion
   34            | expresion COMP_MENOR expresion
   35            | expresion COMP_MAYOR_IGUAL expresion
   36            | expresion COMP_MENOR_IGUAL expresion
   37            | expresion COMP_DISTINTO expresion

   38 $@2: /* vacío */

   39 expresion: expresion $@2 OP_MAS termino

   40 $@3: /* vacío */

   41 expresion: expresion $@3 OP_MENOS termino
   42          | termino

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

   44 lista_a_contar: lista_a_contar COMA factor
   45               | factor

   46 termino: termino OP_MULT factor
   47        | termino OP_DIV factor
   48        | factor

   49 factor: ID
   50       | CTE_ENTERA
   51       | CTE_REAL
   52       | CTE_STRING
   53       | PAR_A expresion PAR_C

   54 entrada: READ ID

   55 salida: WRITE CTE_STRING
   56       | WRITE ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
PROGRAM (258) 1
END (259) 1
IF (260) 26 27
THEN (261) 26 27
ENDIF (262) 26 27
ELSE (263) 27
WHILE (264) 24
WRITE (265) 55 56
READ (266) 54
BETWEEN (267)
INLIST (268)
DIM (269) 6
AS (270) 6
COMP_IGUAL (271) 32
COMP_MAYOR (272) 33
COMP_MENOR (273) 34
COMP_MAYOR_IGUAL (274) 35
COMP_MENOR_IGUAL (275) 36
COMP_DISTINTO (276) 37
OPAR_ASIG (277) 25 43
TIPO_INT (278) 9 12
TIPO_FLOAT (279) 10 13
TIPO_STRING (280) 11 14
CONTAR (281) 43
CTE_ENTERA (282) 50
CTE_REAL (283) 51
CTE_STRING (284) 52 55
OP_MAS (285) 39
OP_MENOS (286) 41
OP_MULT (287) 46
OP_DIV (288) 47
OP_LOG_AND (289) 29
OP_LOG_OR (290) 30
OP_LOG_NOT (291) 31
DOS_PUNTOS (292)
PUN_Y_COM (293) 43
COMA (294) 8 9 10 11 44
ID (295) 7 8 25 43 49 54 56
PAR_A (296) 24 26 27 43 53
PAR_C (297) 24 26 27 43 53
LLAVE_A (298) 24
LLAVE_C (299) 24
COR_A (300) 6 43
COR_C (301) 6 43


No terminales con las reglas donde aparecen

$accept (47)
    en la izquierda: 0
programa (48)
    en la izquierda: 1, en la derecha: 0
zona_declaracion (49)
    en la izquierda: 2, en la derecha: 1
declaraciones (50)
    en la izquierda: 3 4, en la derecha: 2 4
declaracion (51)
    en la izquierda: 6, en la derecha: 3 4
$@1 (52)
    en la izquierda: 5, en la derecha: 6
lista_var (53)
    en la izquierda: 7 8, en la derecha: 6 8
lista_tipo (54)
    en la izquierda: 9 10 11 12 13 14, en la derecha: 6 9 10 11
algoritmo (55)
    en la izquierda: 15, en la derecha: 1
bloque (56)
    en la izquierda: 16 17, en la derecha: 15 17 24 26 27
sentencia (57)
    en la izquierda: 18 19 20 21 22 23, en la derecha: 16 17
ciclo (58)
    en la izquierda: 24, en la derecha: 20
asignacion (59)
    en la izquierda: 25, en la derecha: 18
seleccion (60)
    en la izquierda: 26 27, en la derecha: 19
condicion (61)
    en la izquierda: 28 29 30 31, en la derecha: 24 26 27
comparacion (62)
    en la izquierda: 32 33 34 35 36 37, en la derecha: 28 29 30 31
expresion (63)
    en la izquierda: 39 41 42, en la derecha: 25 32 33 34 35 36 37
    39 41 53
$@2 (64)
    en la izquierda: 38, en la derecha: 39
$@3 (65)
    en la izquierda: 40, en la derecha: 41
contar (66)
    en la izquierda: 43, en la derecha: 23
lista_a_contar (67)
    en la izquierda: 44 45, en la derecha: 43 44
termino (68)
    en la izquierda: 46 47 48, en la derecha: 39 41 42 46 47
factor (69)
    en la izquierda: 49 50 51 52 53, en la derecha: 43 44 45 46 47
    48
entrada (70)
    en la izquierda: 54, en la derecha: 21
salida (71)
    en la izquierda: 55 56, en la derecha: 22


estado 0

    0 $accept: . programa $end

    PROGRAM  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    1 programa: PROGRAM . zona_declaracion algoritmo END

    DIM  desplazar e ir al estado 3

    zona_declaracion  ir al estado 4
    declaraciones     ir al estado 5
    declaracion       ir al estado 6


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 7


estado 3

    6 declaracion: DIM . $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    $default  reduce usando la regla 5 ($@1)

    $@1  ir al estado 8


estado 4

    1 programa: PROGRAM zona_declaracion . algoritmo END

    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    algoritmo   ir al estado 14
    bloque      ir al estado 15
    sentencia   ir al estado 16
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 5

    2 zona_declaracion: declaraciones .
    4 declaraciones: declaraciones . declaracion

    DIM  desplazar e ir al estado 3

    $default  reduce usando la regla 2 (zona_declaracion)

    declaracion  ir al estado 23


estado 6

    3 declaraciones: declaracion .

    $default  reduce usando la regla 3 (declaraciones)


estado 7

    0 $accept: programa $end .

    $default  aceptar


estado 8

    6 declaracion: DIM $@1 . COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    COR_A  desplazar e ir al estado 24


estado 9

   26 seleccion: IF . PAR_A condicion PAR_C THEN bloque ENDIF
   27          | IF . PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

    PAR_A  desplazar e ir al estado 25


estado 10

   24 ciclo: WHILE . PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

    PAR_A  desplazar e ir al estado 26


estado 11

   55 salida: WRITE . CTE_STRING
   56       | WRITE . ID

    CTE_STRING  desplazar e ir al estado 27
    ID          desplazar e ir al estado 28


estado 12

   54 entrada: READ . ID

    ID  desplazar e ir al estado 29


estado 13

   25 asignacion: ID . OPAR_ASIG expresion
   43 contar: ID . OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    OPAR_ASIG  desplazar e ir al estado 30


estado 14

    1 programa: PROGRAM zona_declaracion algoritmo . END

    END  desplazar e ir al estado 31


estado 15

   15 algoritmo: bloque .
   17 bloque: bloque . sentencia

    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    $default  reduce usando la regla 15 (algoritmo)

    sentencia   ir al estado 32
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 16

   16 bloque: sentencia .

    $default  reduce usando la regla 16 (bloque)


estado 17

   20 sentencia: ciclo .

    $default  reduce usando la regla 20 (sentencia)


estado 18

   18 sentencia: asignacion .

    $default  reduce usando la regla 18 (sentencia)


estado 19

   19 sentencia: seleccion .

    $default  reduce usando la regla 19 (sentencia)


estado 20

   23 sentencia: contar .

    $default  reduce usando la regla 23 (sentencia)


estado 21

   21 sentencia: entrada .

    $default  reduce usando la regla 21 (sentencia)


estado 22

   22 sentencia: salida .

    $default  reduce usando la regla 22 (sentencia)


estado 23

    4 declaraciones: declaraciones declaracion .

    $default  reduce usando la regla 4 (declaraciones)


estado 24

    6 declaracion: DIM $@1 COR_A . lista_var COR_C AS COR_A lista_tipo COR_C

    ID  desplazar e ir al estado 33

    lista_var  ir al estado 34


estado 25

   26 seleccion: IF PAR_A . condicion PAR_C THEN bloque ENDIF
   27          | IF PAR_A . condicion PAR_C THEN bloque ELSE bloque ENDIF

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    condicion    ir al estado 40
    comparacion  ir al estado 41
    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44


estado 26

   24 ciclo: WHILE PAR_A . condicion PAR_C LLAVE_A bloque LLAVE_C

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    condicion    ir al estado 45
    comparacion  ir al estado 41
    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44


estado 27

   55 salida: WRITE CTE_STRING .

    $default  reduce usando la regla 55 (salida)


estado 28

   56 salida: WRITE ID .

    $default  reduce usando la regla 56 (salida)


estado 29

   54 entrada: READ ID .

    $default  reduce usando la regla 54 (entrada)


estado 30

   25 asignacion: ID OPAR_ASIG . expresion
   43 contar: ID OPAR_ASIG . CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CONTAR      desplazar e ir al estado 46
    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 47
    termino    ir al estado 43
    factor     ir al estado 44


estado 31

    1 programa: PROGRAM zona_declaracion algoritmo END .

    $default  reduce usando la regla 1 (programa)


estado 32

   17 bloque: bloque sentencia .

    $default  reduce usando la regla 17 (bloque)


estado 33

    7 lista_var: ID .

    $default  reduce usando la regla 7 (lista_var)


estado 34

    6 declaracion: DIM $@1 COR_A lista_var . COR_C AS COR_A lista_tipo COR_C
    8 lista_var: lista_var . COMA ID

    COMA   desplazar e ir al estado 48
    COR_C  desplazar e ir al estado 49


estado 35

   50 factor: CTE_ENTERA .

    $default  reduce usando la regla 50 (factor)


estado 36

   51 factor: CTE_REAL .

    $default  reduce usando la regla 51 (factor)


estado 37

   52 factor: CTE_STRING .

    $default  reduce usando la regla 52 (factor)


estado 38

   49 factor: ID .

    $default  reduce usando la regla 49 (factor)


estado 39

   53 factor: PAR_A . expresion PAR_C

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 50
    termino    ir al estado 43
    factor     ir al estado 44


estado 40

   26 seleccion: IF PAR_A condicion . PAR_C THEN bloque ENDIF
   27          | IF PAR_A condicion . PAR_C THEN bloque ELSE bloque ENDIF

    PAR_C  desplazar e ir al estado 51


estado 41

   28 condicion: comparacion .
   29          | comparacion . OP_LOG_AND comparacion
   30          | comparacion . OP_LOG_OR comparacion
   31          | comparacion . OP_LOG_NOT comparacion

    OP_LOG_AND  desplazar e ir al estado 52
    OP_LOG_OR   desplazar e ir al estado 53
    OP_LOG_NOT  desplazar e ir al estado 54

    $default  reduce usando la regla 28 (condicion)


estado 42

   32 comparacion: expresion . COMP_IGUAL expresion
   33            | expresion . COMP_MAYOR expresion
   34            | expresion . COMP_MENOR expresion
   35            | expresion . COMP_MAYOR_IGUAL expresion
   36            | expresion . COMP_MENOR_IGUAL expresion
   37            | expresion . COMP_DISTINTO expresion
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    COMP_IGUAL        desplazar e ir al estado 55
    COMP_MAYOR        desplazar e ir al estado 56
    COMP_MENOR        desplazar e ir al estado 57
    COMP_MAYOR_IGUAL  desplazar e ir al estado 58
    COMP_MENOR_IGUAL  desplazar e ir al estado 59
    COMP_DISTINTO     desplazar e ir al estado 60

    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 38 ($@2)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 43

   42 expresion: termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 63
    OP_DIV   desplazar e ir al estado 64

    $default  reduce usando la regla 42 (expresion)


estado 44

   48 termino: factor .

    $default  reduce usando la regla 48 (termino)


estado 45

   24 ciclo: WHILE PAR_A condicion . PAR_C LLAVE_A bloque LLAVE_C

    PAR_C  desplazar e ir al estado 65


estado 46

   43 contar: ID OPAR_ASIG CONTAR . PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PAR_A  desplazar e ir al estado 66


estado 47

   25 asignacion: ID OPAR_ASIG expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 25 (asignacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 48

    8 lista_var: lista_var COMA . ID

    ID  desplazar e ir al estado 67


estado 49

    6 declaracion: DIM $@1 COR_A lista_var COR_C . AS COR_A lista_tipo COR_C

    AS  desplazar e ir al estado 68


estado 50

   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino
   53 factor: PAR_A expresion . PAR_C

    PAR_C  desplazar e ir al estado 69

    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 38 ($@2)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 51

   26 seleccion: IF PAR_A condicion PAR_C . THEN bloque ENDIF
   27          | IF PAR_A condicion PAR_C . THEN bloque ELSE bloque ENDIF

    THEN  desplazar e ir al estado 70


estado 52

   29 condicion: comparacion OP_LOG_AND . comparacion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    comparacion  ir al estado 71
    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44


estado 53

   30 condicion: comparacion OP_LOG_OR . comparacion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    comparacion  ir al estado 72
    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44


estado 54

   31 condicion: comparacion OP_LOG_NOT . comparacion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    comparacion  ir al estado 73
    expresion    ir al estado 42
    termino      ir al estado 43
    factor       ir al estado 44


estado 55

   32 comparacion: expresion COMP_IGUAL . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 74
    termino    ir al estado 43
    factor     ir al estado 44


estado 56

   33 comparacion: expresion COMP_MAYOR . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 75
    termino    ir al estado 43
    factor     ir al estado 44


estado 57

   34 comparacion: expresion COMP_MENOR . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 76
    termino    ir al estado 43
    factor     ir al estado 44


estado 58

   35 comparacion: expresion COMP_MAYOR_IGUAL . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 77
    termino    ir al estado 43
    factor     ir al estado 44


estado 59

   36 comparacion: expresion COMP_MENOR_IGUAL . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 78
    termino    ir al estado 43
    factor     ir al estado 44


estado 60

   37 comparacion: expresion COMP_DISTINTO . expresion

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    expresion  ir al estado 79
    termino    ir al estado 43
    factor     ir al estado 44


estado 61

   39 expresion: expresion $@2 . OP_MAS termino

    OP_MAS  desplazar e ir al estado 80


estado 62

   41 expresion: expresion $@3 . OP_MENOS termino

    OP_MENOS  desplazar e ir al estado 81


estado 63

   46 termino: termino OP_MULT . factor

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    factor  ir al estado 82


estado 64

   47 termino: termino OP_DIV . factor

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    factor  ir al estado 83


estado 65

   24 ciclo: WHILE PAR_A condicion PAR_C . LLAVE_A bloque LLAVE_C

    LLAVE_A  desplazar e ir al estado 84


estado 66

   43 contar: ID OPAR_ASIG CONTAR PAR_A . factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    factor  ir al estado 85


estado 67

    8 lista_var: lista_var COMA ID .

    $default  reduce usando la regla 8 (lista_var)


estado 68

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS . COR_A lista_tipo COR_C

    COR_A  desplazar e ir al estado 86


estado 69

   53 factor: PAR_A expresion PAR_C .

    $default  reduce usando la regla 53 (factor)


estado 70

   26 seleccion: IF PAR_A condicion PAR_C THEN . bloque ENDIF
   27          | IF PAR_A condicion PAR_C THEN . bloque ELSE bloque ENDIF

    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    bloque      ir al estado 87
    sentencia   ir al estado 16
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 71

   29 condicion: comparacion OP_LOG_AND comparacion .

    $default  reduce usando la regla 29 (condicion)


estado 72

   30 condicion: comparacion OP_LOG_OR comparacion .

    $default  reduce usando la regla 30 (condicion)


estado 73

   31 condicion: comparacion OP_LOG_NOT comparacion .

    $default  reduce usando la regla 31 (condicion)


estado 74

   32 comparacion: expresion COMP_IGUAL expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 32 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 75

   33 comparacion: expresion COMP_MAYOR expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 33 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 76

   34 comparacion: expresion COMP_MENOR expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 34 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 77

   35 comparacion: expresion COMP_MAYOR_IGUAL expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 35 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 78

   36 comparacion: expresion COMP_MENOR_IGUAL expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 36 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 79

   37 comparacion: expresion COMP_DISTINTO expresion .
   39 expresion: expresion . $@2 OP_MAS termino
   41          | expresion . $@3 OP_MENOS termino

    OP_MAS    reduce usando la regla 38 ($@2)
    OP_MENOS  reduce usando la regla 40 ($@3)
    $default  reduce usando la regla 37 (comparacion)

    $@2  ir al estado 61
    $@3  ir al estado 62


estado 80

   39 expresion: expresion $@2 OP_MAS . termino

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    termino  ir al estado 88
    factor   ir al estado 44


estado 81

   41 expresion: expresion $@3 OP_MENOS . termino

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    termino  ir al estado 89
    factor   ir al estado 44


estado 82

   46 termino: termino OP_MULT factor .

    $default  reduce usando la regla 46 (termino)


estado 83

   47 termino: termino OP_DIV factor .

    $default  reduce usando la regla 47 (termino)


estado 84

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A . bloque LLAVE_C

    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    bloque      ir al estado 90
    sentencia   ir al estado 16
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 85

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor . PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PUN_Y_COM  desplazar e ir al estado 91


estado 86

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A . lista_tipo COR_C

    TIPO_INT     desplazar e ir al estado 92
    TIPO_FLOAT   desplazar e ir al estado 93
    TIPO_STRING  desplazar e ir al estado 94

    lista_tipo  ir al estado 95


estado 87

   17 bloque: bloque . sentencia
   26 seleccion: IF PAR_A condicion PAR_C THEN bloque . ENDIF
   27          | IF PAR_A condicion PAR_C THEN bloque . ELSE bloque ENDIF

    IF     desplazar e ir al estado 9
    ENDIF  desplazar e ir al estado 96
    ELSE   desplazar e ir al estado 97
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    sentencia   ir al estado 32
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 88

   39 expresion: expresion $@2 OP_MAS termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 63
    OP_DIV   desplazar e ir al estado 64

    $default  reduce usando la regla 39 (expresion)


estado 89

   41 expresion: expresion $@3 OP_MENOS termino .
   46 termino: termino . OP_MULT factor
   47        | termino . OP_DIV factor

    OP_MULT  desplazar e ir al estado 63
    OP_DIV   desplazar e ir al estado 64

    $default  reduce usando la regla 41 (expresion)


estado 90

   17 bloque: bloque . sentencia
   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque . LLAVE_C

    IF       desplazar e ir al estado 9
    WHILE    desplazar e ir al estado 10
    WRITE    desplazar e ir al estado 11
    READ     desplazar e ir al estado 12
    ID       desplazar e ir al estado 13
    LLAVE_C  desplazar e ir al estado 98

    sentencia   ir al estado 32
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 91

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM . COR_A lista_a_contar COR_C PAR_C

    COR_A  desplazar e ir al estado 99


estado 92

   12 lista_tipo: TIPO_INT .

    $default  reduce usando la regla 12 (lista_tipo)


estado 93

   13 lista_tipo: TIPO_FLOAT .

    $default  reduce usando la regla 13 (lista_tipo)


estado 94

   14 lista_tipo: TIPO_STRING .

    $default  reduce usando la regla 14 (lista_tipo)


estado 95

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo . COR_C
    9 lista_tipo: lista_tipo . COMA TIPO_INT
   10           | lista_tipo . COMA TIPO_FLOAT
   11           | lista_tipo . COMA TIPO_STRING

    COMA   desplazar e ir al estado 100
    COR_C  desplazar e ir al estado 101


estado 96

   26 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF .

    $default  reduce usando la regla 26 (seleccion)


estado 97

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE . bloque ENDIF

    IF     desplazar e ir al estado 9
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    bloque      ir al estado 102
    sentencia   ir al estado 16
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 98

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C .

    $default  reduce usando la regla 24 (ciclo)


estado 99

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A . lista_a_contar COR_C PAR_C

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    lista_a_contar  ir al estado 103
    factor          ir al estado 104


estado 100

    9 lista_tipo: lista_tipo COMA . TIPO_INT
   10           | lista_tipo COMA . TIPO_FLOAT
   11           | lista_tipo COMA . TIPO_STRING

    TIPO_INT     desplazar e ir al estado 105
    TIPO_FLOAT   desplazar e ir al estado 106
    TIPO_STRING  desplazar e ir al estado 107


estado 101

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C .

    $default  reduce usando la regla 6 (declaracion)


estado 102

   17 bloque: bloque . sentencia
   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque . ENDIF

    IF     desplazar e ir al estado 9
    ENDIF  desplazar e ir al estado 108
    WHILE  desplazar e ir al estado 10
    WRITE  desplazar e ir al estado 11
    READ   desplazar e ir al estado 12
    ID     desplazar e ir al estado 13

    sentencia   ir al estado 32
    ciclo       ir al estado 17
    asignacion  ir al estado 18
    seleccion   ir al estado 19
    contar      ir al estado 20
    entrada     ir al estado 21
    salida      ir al estado 22


estado 103

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar . COR_C PAR_C
   44 lista_a_contar: lista_a_contar . COMA factor

    COMA   desplazar e ir al estado 109
    COR_C  desplazar e ir al estado 110


estado 104

   45 lista_a_contar: factor .

    $default  reduce usando la regla 45 (lista_a_contar)


estado 105

    9 lista_tipo: lista_tipo COMA TIPO_INT .

    $default  reduce usando la regla 9 (lista_tipo)


estado 106

   10 lista_tipo: lista_tipo COMA TIPO_FLOAT .

    $default  reduce usando la regla 10 (lista_tipo)


estado 107

   11 lista_tipo: lista_tipo COMA TIPO_STRING .

    $default  reduce usando la regla 11 (lista_tipo)


estado 108

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF .

    $default  reduce usando la regla 27 (seleccion)


estado 109

   44 lista_a_contar: lista_a_contar COMA . factor

    CTE_ENTERA  desplazar e ir al estado 35
    CTE_REAL    desplazar e ir al estado 36
    CTE_STRING  desplazar e ir al estado 37
    ID          desplazar e ir al estado 38
    PAR_A       desplazar e ir al estado 39

    factor  ir al estado 111


estado 110

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C . PAR_C

    PAR_C  desplazar e ir al estado 112


estado 111

   44 lista_a_contar: lista_a_contar COMA factor .

    $default  reduce usando la regla 44 (lista_a_contar)


estado 112

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C .

    $default  reduce usando la regla 43 (contar)
