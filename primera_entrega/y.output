Terminals unused in grammar

    DOS_PUNTOS


Grammar

    0 $accept: programa $end

    1 programa: PROGRAM zona_declaracion algoritmo END

    2 zona_declaracion: declaraciones

    3 declaraciones: declaracion
    4              | declaraciones declaracion

    5 $@1: ε

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    7 lista_var: ID
    8          | lista_var COMA ID

    9 lista_tipo: lista_tipo COMA TIPO_INT
   10           | lista_tipo COMA TIPO_FLOAT
   11           | lista_tipo COMA TIPO_STRING
   12           | TIPO_INT
   13           | TIPO_FLOAT
   14           | TIPO_STRING

   15 algoritmo: bloque

   16 bloque: sentencia
   17       | bloque sentencia

   18 sentencia: asignacion
   19          | seleccion
   20          | ciclo
   21          | entrada
   22          | salida
   23          | contar

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

   25 asignacion: ID OPAR_ASIG expresion

   26 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF
   27          | IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

   28 condicion: comparacion
   29          | comparacion OP_LOG_AND comparacion
   30          | comparacion OP_LOG_OR comparacion
   31          | comparacion OP_LOG_NOT comparacion

   32 comparacion: expresion COMP_IGUAL expresion
   33            | expresion COMP_MAYOR expresion
   34            | expresion COMP_MENOR expresion
   35            | expresion COMP_MAYOR_IGUAL expresion
   36            | expresion COMP_MENOR_IGUAL expresion
   37            | expresion COMP_DISTINTO expresion

   38 $@2: ε

   39 expresion: expresion $@2 OP_MAS termino

   40 $@3: ε

   41 expresion: expresion $@3 OP_MENOS termino
   42          | termino

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

   44 lista_a_contar: lista_a_contar COMA factor
   45               | factor

   46 termino: termino OP_MULT factor
   47        | termino OP_DIV factor
   48        | factor

   49 factor: ID
   50       | CTE_ENTERA
   51       | CTE_REAL
   52       | CTE_STRING
   53       | PAR_A expresion PAR_C

   54 entrada: GET ID

   55 salida: DISPLAY CTE_STRING
   56       | DISPLAY ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 1
    END (259) 1
    IF (260) 26 27
    THEN (261) 26 27
    ENDIF (262) 26 27
    ELSE (263) 27
    WHILE (264) 24
    DISPLAY (265) 55 56
    GET (266) 54
    DIM (267) 6
    AS (268) 6
    COMP_IGUAL (269) 32
    COMP_MAYOR (270) 33
    COMP_MENOR (271) 34
    COMP_MAYOR_IGUAL (272) 35
    COMP_MENOR_IGUAL (273) 36
    COMP_DISTINTO (274) 37
    OPAR_ASIG (275) 25 43
    TIPO_INT (276) 9 12
    TIPO_FLOAT (277) 10 13
    TIPO_STRING (278) 11 14
    CONTAR (279) 43
    CTE_ENTERA <num> (280) 50
    CTE_REAL <real> (281) 51
    CTE_STRING <str> (282) 52 55
    OP_MAS (283) 39
    OP_MENOS (284) 41
    OP_MULT (285) 46
    OP_DIV (286) 47
    OP_LOG_AND (287) 29
    OP_LOG_OR (288) 30
    OP_LOG_NOT (289) 31
    DOS_PUNTOS (290)
    PUN_Y_COM (291) 43
    COMA (292) 8 9 10 11 44
    ID <strid> (293) 7 8 25 43 49 54 56
    PAR_A (294) 24 26 27 43 53
    PAR_C (295) 24 26 27 43 53
    LLAVE_A (296) 24
    LLAVE_C (297) 24
    COR_A (298) 6 43
    COR_C (299) 6 43


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    programa (46)
        on left: 1
        on right: 0
    zona_declaracion (47)
        on left: 2
        on right: 1
    declaraciones (48)
        on left: 3 4
        on right: 2 4
    declaracion (49)
        on left: 6
        on right: 3 4
    $@1 (50)
        on left: 5
        on right: 6
    lista_var (51)
        on left: 7 8
        on right: 6 8
    lista_tipo (52)
        on left: 9 10 11 12 13 14
        on right: 6 9 10 11
    algoritmo (53)
        on left: 15
        on right: 1
    bloque (54)
        on left: 16 17
        on right: 15 17 24 26 27
    sentencia (55)
        on left: 18 19 20 21 22 23
        on right: 16 17
    ciclo (56)
        on left: 24
        on right: 20
    asignacion (57)
        on left: 25
        on right: 18
    seleccion (58)
        on left: 26 27
        on right: 19
    condicion (59)
        on left: 28 29 30 31
        on right: 24 26 27
    comparacion (60)
        on left: 32 33 34 35 36 37
        on right: 28 29 30 31
    expresion (61)
        on left: 39 41 42
        on right: 25 32 33 34 35 36 37 39 41 53
    $@2 (62)
        on left: 38
        on right: 39
    $@3 (63)
        on left: 40
        on right: 41
    contar (64)
        on left: 43
        on right: 23
    lista_a_contar (65)
        on left: 44 45
        on right: 43 44
    termino (66)
        on left: 46 47 48
        on right: 39 41 42 46 47
    factor (67)
        on left: 49 50 51 52 53
        on right: 43 44 45 46 47 48
    entrada (68)
        on left: 54
        on right: 21
    salida (69)
        on left: 55 56
        on right: 22


State 0

    0 $accept: • programa $end

    PROGRAM  shift, and go to state 1

    programa  go to state 2


State 1

    1 programa: PROGRAM • zona_declaracion algoritmo END

    DIM  shift, and go to state 3

    zona_declaracion  go to state 4
    declaraciones     go to state 5
    declaracion       go to state 6


State 2

    0 $accept: programa • $end

    $end  shift, and go to state 7


State 3

    6 declaracion: DIM • $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    $default  reduce using rule 5 ($@1)

    $@1  go to state 8


State 4

    1 programa: PROGRAM zona_declaracion • algoritmo END

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    algoritmo   go to state 14
    bloque      go to state 15
    sentencia   go to state 16
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 5

    2 zona_declaracion: declaraciones •
    4 declaraciones: declaraciones • declaracion

    DIM  shift, and go to state 3

    $default  reduce using rule 2 (zona_declaracion)

    declaracion  go to state 23


State 6

    3 declaraciones: declaracion •

    $default  reduce using rule 3 (declaraciones)


State 7

    0 $accept: programa $end •

    $default  accept


State 8

    6 declaracion: DIM $@1 • COR_A lista_var COR_C AS COR_A lista_tipo COR_C

    COR_A  shift, and go to state 24


State 9

   26 seleccion: IF • PAR_A condicion PAR_C THEN bloque ENDIF
   27          | IF • PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF

    PAR_A  shift, and go to state 25


State 10

   24 ciclo: WHILE • PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C

    PAR_A  shift, and go to state 26


State 11

   55 salida: DISPLAY • CTE_STRING
   56       | DISPLAY • ID

    CTE_STRING  shift, and go to state 27
    ID          shift, and go to state 28


State 12

   54 entrada: GET • ID

    ID  shift, and go to state 29


State 13

   25 asignacion: ID • OPAR_ASIG expresion
   43 contar: ID • OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    OPAR_ASIG  shift, and go to state 30


State 14

    1 programa: PROGRAM zona_declaracion algoritmo • END

    END  shift, and go to state 31


State 15

   15 algoritmo: bloque •
   17 bloque: bloque • sentencia

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    $default  reduce using rule 15 (algoritmo)

    sentencia   go to state 32
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 16

   16 bloque: sentencia •

    $default  reduce using rule 16 (bloque)


State 17

   20 sentencia: ciclo •

    $default  reduce using rule 20 (sentencia)


State 18

   18 sentencia: asignacion •

    $default  reduce using rule 18 (sentencia)


State 19

   19 sentencia: seleccion •

    $default  reduce using rule 19 (sentencia)


State 20

   23 sentencia: contar •

    $default  reduce using rule 23 (sentencia)


State 21

   21 sentencia: entrada •

    $default  reduce using rule 21 (sentencia)


State 22

   22 sentencia: salida •

    $default  reduce using rule 22 (sentencia)


State 23

    4 declaraciones: declaraciones declaracion •

    $default  reduce using rule 4 (declaraciones)


State 24

    6 declaracion: DIM $@1 COR_A • lista_var COR_C AS COR_A lista_tipo COR_C

    ID  shift, and go to state 33

    lista_var  go to state 34


State 25

   26 seleccion: IF PAR_A • condicion PAR_C THEN bloque ENDIF
   27          | IF PAR_A • condicion PAR_C THEN bloque ELSE bloque ENDIF

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    condicion    go to state 40
    comparacion  go to state 41
    expresion    go to state 42
    termino      go to state 43
    factor       go to state 44


State 26

   24 ciclo: WHILE PAR_A • condicion PAR_C LLAVE_A bloque LLAVE_C

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    condicion    go to state 45
    comparacion  go to state 41
    expresion    go to state 42
    termino      go to state 43
    factor       go to state 44


State 27

   55 salida: DISPLAY CTE_STRING •

    $default  reduce using rule 55 (salida)


State 28

   56 salida: DISPLAY ID •

    $default  reduce using rule 56 (salida)


State 29

   54 entrada: GET ID •

    $default  reduce using rule 54 (entrada)


State 30

   25 asignacion: ID OPAR_ASIG • expresion
   43 contar: ID OPAR_ASIG • CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CONTAR      shift, and go to state 46
    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 47
    termino    go to state 43
    factor     go to state 44


State 31

    1 programa: PROGRAM zona_declaracion algoritmo END •

    $default  reduce using rule 1 (programa)


State 32

   17 bloque: bloque sentencia •

    $default  reduce using rule 17 (bloque)


State 33

    7 lista_var: ID •

    $default  reduce using rule 7 (lista_var)


State 34

    6 declaracion: DIM $@1 COR_A lista_var • COR_C AS COR_A lista_tipo COR_C
    8 lista_var: lista_var • COMA ID

    COMA   shift, and go to state 48
    COR_C  shift, and go to state 49


State 35

   50 factor: CTE_ENTERA •

    $default  reduce using rule 50 (factor)


State 36

   51 factor: CTE_REAL •

    $default  reduce using rule 51 (factor)


State 37

   52 factor: CTE_STRING •

    $default  reduce using rule 52 (factor)


State 38

   49 factor: ID •

    $default  reduce using rule 49 (factor)


State 39

   53 factor: PAR_A • expresion PAR_C

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 50
    termino    go to state 43
    factor     go to state 44


State 40

   26 seleccion: IF PAR_A condicion • PAR_C THEN bloque ENDIF
   27          | IF PAR_A condicion • PAR_C THEN bloque ELSE bloque ENDIF

    PAR_C  shift, and go to state 51


State 41

   28 condicion: comparacion •
   29          | comparacion • OP_LOG_AND comparacion
   30          | comparacion • OP_LOG_OR comparacion
   31          | comparacion • OP_LOG_NOT comparacion

    OP_LOG_AND  shift, and go to state 52
    OP_LOG_OR   shift, and go to state 53
    OP_LOG_NOT  shift, and go to state 54

    $default  reduce using rule 28 (condicion)


State 42

   32 comparacion: expresion • COMP_IGUAL expresion
   33            | expresion • COMP_MAYOR expresion
   34            | expresion • COMP_MENOR expresion
   35            | expresion • COMP_MAYOR_IGUAL expresion
   36            | expresion • COMP_MENOR_IGUAL expresion
   37            | expresion • COMP_DISTINTO expresion
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    COMP_IGUAL        shift, and go to state 55
    COMP_MAYOR        shift, and go to state 56
    COMP_MENOR        shift, and go to state 57
    COMP_MAYOR_IGUAL  shift, and go to state 58
    COMP_MENOR_IGUAL  shift, and go to state 59
    COMP_DISTINTO     shift, and go to state 60

    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 38 ($@2)

    $@2  go to state 61
    $@3  go to state 62


State 43

   42 expresion: termino •
   46 termino: termino • OP_MULT factor
   47        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 63
    OP_DIV   shift, and go to state 64

    $default  reduce using rule 42 (expresion)


State 44

   48 termino: factor •

    $default  reduce using rule 48 (termino)


State 45

   24 ciclo: WHILE PAR_A condicion • PAR_C LLAVE_A bloque LLAVE_C

    PAR_C  shift, and go to state 65


State 46

   43 contar: ID OPAR_ASIG CONTAR • PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PAR_A  shift, and go to state 66


State 47

   25 asignacion: ID OPAR_ASIG expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 25 (asignacion)

    $@2  go to state 61
    $@3  go to state 62


State 48

    8 lista_var: lista_var COMA • ID

    ID  shift, and go to state 67


State 49

    6 declaracion: DIM $@1 COR_A lista_var COR_C • AS COR_A lista_tipo COR_C

    AS  shift, and go to state 68


State 50

   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino
   53 factor: PAR_A expresion • PAR_C

    PAR_C  shift, and go to state 69

    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 38 ($@2)

    $@2  go to state 61
    $@3  go to state 62


State 51

   26 seleccion: IF PAR_A condicion PAR_C • THEN bloque ENDIF
   27          | IF PAR_A condicion PAR_C • THEN bloque ELSE bloque ENDIF

    THEN  shift, and go to state 70


State 52

   29 condicion: comparacion OP_LOG_AND • comparacion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    comparacion  go to state 71
    expresion    go to state 42
    termino      go to state 43
    factor       go to state 44


State 53

   30 condicion: comparacion OP_LOG_OR • comparacion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    comparacion  go to state 72
    expresion    go to state 42
    termino      go to state 43
    factor       go to state 44


State 54

   31 condicion: comparacion OP_LOG_NOT • comparacion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    comparacion  go to state 73
    expresion    go to state 42
    termino      go to state 43
    factor       go to state 44


State 55

   32 comparacion: expresion COMP_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 74
    termino    go to state 43
    factor     go to state 44


State 56

   33 comparacion: expresion COMP_MAYOR • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 75
    termino    go to state 43
    factor     go to state 44


State 57

   34 comparacion: expresion COMP_MENOR • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 76
    termino    go to state 43
    factor     go to state 44


State 58

   35 comparacion: expresion COMP_MAYOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 77
    termino    go to state 43
    factor     go to state 44


State 59

   36 comparacion: expresion COMP_MENOR_IGUAL • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 78
    termino    go to state 43
    factor     go to state 44


State 60

   37 comparacion: expresion COMP_DISTINTO • expresion

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    expresion  go to state 79
    termino    go to state 43
    factor     go to state 44


State 61

   39 expresion: expresion $@2 • OP_MAS termino

    OP_MAS  shift, and go to state 80


State 62

   41 expresion: expresion $@3 • OP_MENOS termino

    OP_MENOS  shift, and go to state 81


State 63

   46 termino: termino OP_MULT • factor

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    factor  go to state 82


State 64

   47 termino: termino OP_DIV • factor

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    factor  go to state 83


State 65

   24 ciclo: WHILE PAR_A condicion PAR_C • LLAVE_A bloque LLAVE_C

    LLAVE_A  shift, and go to state 84


State 66

   43 contar: ID OPAR_ASIG CONTAR PAR_A • factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    factor  go to state 85


State 67

    8 lista_var: lista_var COMA ID •

    $default  reduce using rule 8 (lista_var)


State 68

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS • COR_A lista_tipo COR_C

    COR_A  shift, and go to state 86


State 69

   53 factor: PAR_A expresion PAR_C •

    $default  reduce using rule 53 (factor)


State 70

   26 seleccion: IF PAR_A condicion PAR_C THEN • bloque ENDIF
   27          | IF PAR_A condicion PAR_C THEN • bloque ELSE bloque ENDIF

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    bloque      go to state 87
    sentencia   go to state 16
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 71

   29 condicion: comparacion OP_LOG_AND comparacion •

    $default  reduce using rule 29 (condicion)


State 72

   30 condicion: comparacion OP_LOG_OR comparacion •

    $default  reduce using rule 30 (condicion)


State 73

   31 condicion: comparacion OP_LOG_NOT comparacion •

    $default  reduce using rule 31 (condicion)


State 74

   32 comparacion: expresion COMP_IGUAL expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 32 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 75

   33 comparacion: expresion COMP_MAYOR expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 33 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 76

   34 comparacion: expresion COMP_MENOR expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 34 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 77

   35 comparacion: expresion COMP_MAYOR_IGUAL expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 35 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 78

   36 comparacion: expresion COMP_MENOR_IGUAL expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 36 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 79

   37 comparacion: expresion COMP_DISTINTO expresion •
   39 expresion: expresion • $@2 OP_MAS termino
   41          | expresion • $@3 OP_MENOS termino

    OP_MAS    reduce using rule 38 ($@2)
    OP_MENOS  reduce using rule 40 ($@3)
    $default  reduce using rule 37 (comparacion)

    $@2  go to state 61
    $@3  go to state 62


State 80

   39 expresion: expresion $@2 OP_MAS • termino

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    termino  go to state 88
    factor   go to state 44


State 81

   41 expresion: expresion $@3 OP_MENOS • termino

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    termino  go to state 89
    factor   go to state 44


State 82

   46 termino: termino OP_MULT factor •

    $default  reduce using rule 46 (termino)


State 83

   47 termino: termino OP_DIV factor •

    $default  reduce using rule 47 (termino)


State 84

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A • bloque LLAVE_C

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    bloque      go to state 90
    sentencia   go to state 16
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 85

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor • PUN_Y_COM COR_A lista_a_contar COR_C PAR_C

    PUN_Y_COM  shift, and go to state 91


State 86

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A • lista_tipo COR_C

    TIPO_INT     shift, and go to state 92
    TIPO_FLOAT   shift, and go to state 93
    TIPO_STRING  shift, and go to state 94

    lista_tipo  go to state 95


State 87

   17 bloque: bloque • sentencia
   26 seleccion: IF PAR_A condicion PAR_C THEN bloque • ENDIF
   27          | IF PAR_A condicion PAR_C THEN bloque • ELSE bloque ENDIF

    IF       shift, and go to state 9
    ENDIF    shift, and go to state 96
    ELSE     shift, and go to state 97
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    sentencia   go to state 32
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 88

   39 expresion: expresion $@2 OP_MAS termino •
   46 termino: termino • OP_MULT factor
   47        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 63
    OP_DIV   shift, and go to state 64

    $default  reduce using rule 39 (expresion)


State 89

   41 expresion: expresion $@3 OP_MENOS termino •
   46 termino: termino • OP_MULT factor
   47        | termino • OP_DIV factor

    OP_MULT  shift, and go to state 63
    OP_DIV   shift, and go to state 64

    $default  reduce using rule 41 (expresion)


State 90

   17 bloque: bloque • sentencia
   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque • LLAVE_C

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13
    LLAVE_C  shift, and go to state 98

    sentencia   go to state 32
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 91

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM • COR_A lista_a_contar COR_C PAR_C

    COR_A  shift, and go to state 99


State 92

   12 lista_tipo: TIPO_INT •

    $default  reduce using rule 12 (lista_tipo)


State 93

   13 lista_tipo: TIPO_FLOAT •

    $default  reduce using rule 13 (lista_tipo)


State 94

   14 lista_tipo: TIPO_STRING •

    $default  reduce using rule 14 (lista_tipo)


State 95

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo • COR_C
    9 lista_tipo: lista_tipo • COMA TIPO_INT
   10           | lista_tipo • COMA TIPO_FLOAT
   11           | lista_tipo • COMA TIPO_STRING

    COMA   shift, and go to state 100
    COR_C  shift, and go to state 101


State 96

   26 seleccion: IF PAR_A condicion PAR_C THEN bloque ENDIF •

    $default  reduce using rule 26 (seleccion)


State 97

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE • bloque ENDIF

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    bloque      go to state 102
    sentencia   go to state 16
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 98

   24 ciclo: WHILE PAR_A condicion PAR_C LLAVE_A bloque LLAVE_C •

    $default  reduce using rule 24 (ciclo)


State 99

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A • lista_a_contar COR_C PAR_C

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    lista_a_contar  go to state 103
    factor          go to state 104


State 100

    9 lista_tipo: lista_tipo COMA • TIPO_INT
   10           | lista_tipo COMA • TIPO_FLOAT
   11           | lista_tipo COMA • TIPO_STRING

    TIPO_INT     shift, and go to state 105
    TIPO_FLOAT   shift, and go to state 106
    TIPO_STRING  shift, and go to state 107


State 101

    6 declaracion: DIM $@1 COR_A lista_var COR_C AS COR_A lista_tipo COR_C •

    $default  reduce using rule 6 (declaracion)


State 102

   17 bloque: bloque • sentencia
   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque • ENDIF

    IF       shift, and go to state 9
    ENDIF    shift, and go to state 108
    WHILE    shift, and go to state 10
    DISPLAY  shift, and go to state 11
    GET      shift, and go to state 12
    ID       shift, and go to state 13

    sentencia   go to state 32
    ciclo       go to state 17
    asignacion  go to state 18
    seleccion   go to state 19
    contar      go to state 20
    entrada     go to state 21
    salida      go to state 22


State 103

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar • COR_C PAR_C
   44 lista_a_contar: lista_a_contar • COMA factor

    COMA   shift, and go to state 109
    COR_C  shift, and go to state 110


State 104

   45 lista_a_contar: factor •

    $default  reduce using rule 45 (lista_a_contar)


State 105

    9 lista_tipo: lista_tipo COMA TIPO_INT •

    $default  reduce using rule 9 (lista_tipo)


State 106

   10 lista_tipo: lista_tipo COMA TIPO_FLOAT •

    $default  reduce using rule 10 (lista_tipo)


State 107

   11 lista_tipo: lista_tipo COMA TIPO_STRING •

    $default  reduce using rule 11 (lista_tipo)


State 108

   27 seleccion: IF PAR_A condicion PAR_C THEN bloque ELSE bloque ENDIF •

    $default  reduce using rule 27 (seleccion)


State 109

   44 lista_a_contar: lista_a_contar COMA • factor

    CTE_ENTERA  shift, and go to state 35
    CTE_REAL    shift, and go to state 36
    CTE_STRING  shift, and go to state 37
    ID          shift, and go to state 38
    PAR_A       shift, and go to state 39

    factor  go to state 111


State 110

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C • PAR_C

    PAR_C  shift, and go to state 112


State 111

   44 lista_a_contar: lista_a_contar COMA factor •

    $default  reduce using rule 44 (lista_a_contar)


State 112

   43 contar: ID OPAR_ASIG CONTAR PAR_A factor PUN_Y_COM COR_A lista_a_contar COR_C PAR_C •

    $default  reduce using rule 43 (contar)
